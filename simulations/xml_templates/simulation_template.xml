<beast version='2.0' namespace='master:master.model:master.steppers:master.conditions:master.postprocessors:master.outputs'>
    <run spec='InheritanceTrajectory'
        verbosity='2' samplePopulationSizes="true" simulationTime="insert_simulation_time">

        <model spec='Model'>
            <population spec='Population' id='E' populationName='E'/>
            <population spec='Population' id='Iinit' populationName='Iinit'/>
            <population spec='Population' id='IntroCount' populationName='IntroCount'/>
            <population spec='Population' id='I' populationName='I'/>
            <population spec='Population' id='R' populationName='R'/>
            <population spec='Population' id='samp' populationName='samp'/>
            <population spec='Population' id='samp2' populationName='samp2'/>

            <reactionGroup spec='ReactionGroup' reactionGroupName='Introduction'>
              <reaction spec='Reaction' rate="732">
                Iinit:1 -> Iinit:1 + I:1 + IntroCount
              </reaction>
            </reactionGroup>

            insert_transmission

          <reactionGroup spec='ReactionGroup' reactionGroupName='Exposed'>
           <reaction spec='Reaction' rate="45.75">
             E:1 -> I:1
           </reaction>
         </reactionGroup>

         <reactionGroup spec='ReactionGroup' reactionGroupName='Recovery'>
          <reaction spec='Reaction' rate="81.3333333333">
            I -> R
          </reaction>
          </reactionGroup>


          <reactionGroup spec='ReactionGroup' reactionGroupName='Sampling'>
           <reaction spec='Reaction' rate="45.75">  <!--this comes from the time it takes for individuals to present to healthcare being 8 days. so 366/8-->
             I -> samp
           </reaction>
         </reactionGroup>





          <!-- <reactionGroup spec='ReactionGroup' reactionGroupName='Sampling'>
           <reaction spec='Reaction' rate="91.2500">
             I -> sample
           </reaction>
         </reactionGroup> -->
        </model>

        <initialState spec='InitState'>
          <lineageSeed spec='Individual' population="@Iinit"/>
        </initialState>

        <lineageEndCondition spec='LineageEndCondition' nLineages="0"/>
        <inheritancePostProcessor spec='LineageFilter' reactionName="Sampling"/>
        <inheritancePostProcessor spec='LineageSampler' nSamples="700"/>

        <postSimCondition spec='LeafCountPostSimCondition'
                  nLeaves="500"
                  exact="false"
                  exceedCondition="true"/>


        <output spec='JsonOutput' fileName='../simulation_results/$(filebase).json'/>
        <output spec='NewickOutput' fileName='../simulation_results/$(filebase).tree' collapseSingleChildNodes="true"/>
        <output spec='NexusOutput' fileName='../simulation_results/$(filebase).nexus' collapseSingleChildNodes="true"/>
    </run>
</beast>
